@inject ConfigManager ConfigManager
@inject Updater Updater
@using OpenShock.Desktop.Config
@using OpenShock.Desktop.Services
@using OpenShock.Desktop.Utils
@using OpenShock.Desktop.Ui.ErrorHandling
@implements IAsyncDisposable

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;

    private bool _isDownloading = false;

    private IAsyncDisposable? _downloadProgressSubscription;

    protected override async Task OnInitializedAsync()
    {
        _downloadProgressSubscription = await Updater.DownloadProgress.ValueUpdated.SubscribeAsync(_ => InvokeAsync(StateHasChanged));
    }

    private void Skip()
    {
        ConfigManager.Config.App.LastIgnoredVersion = Updater.LatestReleaseInfo!.Value.Version;
        ConfigManager.Save();
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Dismiss()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void DownloadUpdate()
    {
        _isDownloading = true;
        OsTask.Run(Updater.DoUpdate);
    }

    public async ValueTask DisposeAsync()
    {
        if (_downloadProgressSubscription != null) await _downloadProgressSubscription.DisposeAsync();
    }

}

<MudDialog>
    <DialogContent>
        <div style="text-align: center">
            @if (!_isDownloading)
            {
                <MudText Typo="Typo.h3">Update Available</MudText>
                <MudText Typo="Typo.h5">@Updater.LatestReleaseInfo!.Value.Version.ToString()</MudText>

                <br />
                <MudText Typo="Typo.body1"> A new version of OpenShock Desktop is available.Would you like to update?</MudText>
                
                <CodeBlock ShowCopyButton="false" Value="@Updater.LatestReleaseInfo!.Value.Response.Body"/>
            }
            else
            {
                <MudText Typo="Typo.h3">Downloading Update</MudText>
                <br/>
                <MudText Typo="Typo.body1">Please wait while the update is downloaded.</MudText>
                <br/>
                <MudProgressLinear  Color="Color.Primary" Style="width: 100%" Value="@Updater.DownloadProgress.Value"/>
                
                @if (Math.Abs(Updater.DownloadProgress.Value - 100) < 0.0001)
                {
                    <MudText Typo="Typo.body1">Update downloaded successfully. Restarting in one second...</MudText>
                } 
            }
        </div >
    </DialogContent>
    <DialogActions>
        @if (!_isDownloading)
        {
            <MudButton Color="Color.Primary" OnClick="Dismiss">Dismiss</MudButton>
            <MudButton Color="Color.Primary" OnClick="Skip">Skip</MudButton>
            <MudButton Color="Color.Primary" OnClick="DownloadUpdate">Update</MudButton>
        }
    </DialogActions>
</MudDialog>