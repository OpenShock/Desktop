@using OpenShock.Desktop.ModuleManager

@inject ModuleManager ModuleManager
@page "/dash/module/{module}/{component}"

@if (LoadedModule == null)
{
    <MudPaper Outlined="true" Class="mud-paper-padding">
        <MudText Typo="Typo.h6">Module not found [@Module]</MudText>
    </MudPaper>
}
else if (ComponentType == null)
{
    <MudPaper Outlined="true" Class="mud-paper-padding">
        <MudText Typo="Typo.h6">Sub Component not found [@Module] [@Component]</MudText>
    </MudPaper>
}
else
{
    <DynamicComponent Type="ComponentType"></DynamicComponent>
}

@code {
    [Parameter] public string? Module { get; set; }

    [Parameter] public string? Component { get; set; }

    private LoadedModule? LoadedModule => string.IsNullOrWhiteSpace(Module) ? null : ModuleManager.Modules.GetValueOrDefault(Module);

    private Type? ComponentType => LoadedModule?.Module.NavigationComponents.FirstOrDefault(x => x.Name.Equals(Component, StringComparison.InvariantCultureIgnoreCase))
        ?.ComponentType;

}